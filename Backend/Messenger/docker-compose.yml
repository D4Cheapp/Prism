version: "3.7"
name: prism-messenger
services:
  app:
    container_name: prism-messenger
    image: d4c/prism-messenger:latest
    build: ./
    restart: always
    depends_on:
      - neo4j
      - minio
    networks:
      - prism-network
      - prism-messenger-network
    ports:
      - "8080:8080"
    env_file:
      - ../../backend.env
    environment:
      RABBITMQ_DEFAULT_URL: amqp://${RABBITMQ_DEFAULT_USER}:${RABBITMQ_DEFAULT_PASS}@rabbitmq:5672
      URL_NEO4J: neo4j://neo4j:7687
      URL_MINIO: http://minio:9000
      REDIS_HOST: redis
  neo4j:
    container_name: neo4j
    image: neo4j
    restart: always
    hostname: neo4j
    networks:
      - prism-messenger-network
    ports:
      - "7687:7687"
      - "7474:7474"
      - "7473:7473"
    env_file:
      - ../../backend.env
  minio:
    container_name: minio
    image: minio/minio:latest
    restart: always
    hostname: minio
    networks:
      - prism-messenger-network
    ports:
      - "9000:9000"
      - "9001:9001"
    command: server /data --console-address :9001
    env_file:
      - ../../backend.env
    entrypoint: >
      /bin/sh -c '
        isAlive() { curl -sf http://127.0.0.1:9000/minio/health/live; }
        minio $0 "$@" --quiet & echo $! > /tmp/minio.pid
        while ! isAlive; do sleep 0.1; done
        mc alias set minio http://127.0.0.1:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD}
        mc mb minio/${MINIO_DEFAULT_BUCKET} || true 
        mc admin user add minio ${MINIO_USER} ${MINIO_PASSWORD}
        mc admin policy attach minio readwrite --user=${MINIO_USER}
        mc mb minio/${MINIO_DEFAULT_BUCKET}/profiles
        mc mb minio/${MINIO_DEFAULT_BUCKET}/chats
        mc mb minio/${MINIO_DEFAULT_BUCKET}/groups
        kill -s INT $(cat /tmp/minio.pid) && rm /tmp/minio.pid
        while isAlive; do sleep 0.1; done
        exec minio $0 "$@" '
networks:
  prism-network:
    external: true
    name: prism-network
  prism-messenger-network:
    name: prism-messenger-network